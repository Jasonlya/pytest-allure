{"name": "test_baidu", "status": "broken", "statusDetails": {"message": "ValueError: could not convert string to float: 'kw'", "trace": "self = <TestCases.test_baidu.Testbaidu object at 0x000002C6475A8DC0>\n\n    def test_baidu(self):\n        \"'测试百度输入'\"\n        self.baidu_page.open()\n        self.driver.maximize_window()\n        time.sleep(5)    #强制等待\n        self.driver.implicitly_wait(5)  #隐式等待\n>       self.baidu_page.search('测试水是生是死')\n\ntest_baidu.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\page\\PageObject\\BaiduPage.py:27: in search\n    super().find_element(*self.sousuokuang).send_keys(input_text)\n..\\page\\BasePage.py:22: in find_element\n    element = WebDriverWait(self.driver, timeout).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"89062a81de890588065ec4575a6a1931\")>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"89062a81de890588065ec4575a6a1931\")>\ntimeout = 'kw', poll_frequency = 0.5, ignored_exceptions = None\n\n    def __init__(\n        self,\n        driver,\n        timeout: float,\n        poll_frequency: float = POLL_FREQUENCY,\n        ignored_exceptions: typing.Optional[WaitExcTypes] = None,\n    ):\n        \"\"\"Constructor, takes a WebDriver instance and timeout in seconds.\n    \n        :Args:\n         - driver - Instance of WebDriver (Ie, Firefox, Chrome or Remote)\n         - timeout - Number of seconds before timing out\n         - poll_frequency - sleep interval between calls\n           By default, it is 0.5 second.\n         - ignored_exceptions - iterable structure of exception classes ignored during calls.\n           By default, it contains NoSuchElementException only.\n    \n        Example::\n    \n         from selenium.webdriver.support.wait import WebDriverWait \\n\n         element = WebDriverWait(driver, 10).until(lambda x: x.find_element(By.ID, \"someId\")) \\n\n         is_disappeared = WebDriverWait(driver, 30, 1, (ElementNotVisibleException)).\\\\ \\n\n                     until_not(lambda x: x.find_element(By.ID, \"someId\").is_displayed())\n        \"\"\"\n        self._driver = driver\n>       self._timeout = float(timeout)\nE       ValueError: could not convert string to float: 'kw'\n\nE:\\python\\Python310\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:55: ValueError"}, "description": "'测试百度输入'", "start": 1686154793881, "stop": 1686154799660, "uuid": "dedab640-e1f2-4faf-ba15-80638e0f0f5f", "historyId": "ebd507652e4e28f9809fb98146a295ba", "testCaseId": "ebd507652e4e28f9809fb98146a295ba", "fullName": "TestCases.test_baidu.Testbaidu#test_baidu", "labels": [{"name": "parentSuite", "value": "TestCases"}, {"name": "suite", "value": "test_baidu"}, {"name": "subSuite", "value": "Testbaidu"}, {"name": "host", "value": "DESKTOP-2BK3DCT"}, {"name": "thread", "value": "1828-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "TestCases.test_baidu"}]}